# fall
slope_f_mean = f_model_mean$coefficients[2,1],
p_f_mean = f_model_mean$coefficients[2,4],
rsquared_f_mean = f_model_mean$r.squared,
slope_f_low = f_model_low$coefficients[2,1],
p_f_low = f_model_low$coefficients[2,4],
rsquared_f_low = f_model_low$r.squared,
slope_f_high = f_model_high$coefficients[2,1],
p_f_high = f_model_high$coefficients[2,4],
rsquared_f_high = f_model_high$r.squared)} # end yes winter init
else{
loop_frame <- tibble(
# top level
domain = target_domain,
site = target_site,
solute = target_solute,
# annual
n_ann = nrow(chem_ann),
slope_ann_mean = ann_model_mean$coefficients[2,1],
p_ann_mean = ann_model_mean$coefficients[2,4],
rsquared_ann_mean = ann_model_mean$r.squared,
slope_ann_low = ann_model_low$coefficients[2,1],
p_ann_low = ann_model_low$coefficients[2,4],
rsquared_ann_low = ann_model_low$r.squared,
slope_ann_high = ann_model_high$coefficients[2,1],
p_ann_high = ann_model_high$coefficients[2,4],
rsquared_ann_high = ann_model_high$r.squared,
# spring
slope_sp_mean = sp_model_mean$coefficients[2,1],
p_sp_mean = sp_model_mean$coefficients[2,4],
rsquared_sp_mean = sp_model_mean$r.squared,
slope_sp_low = sp_model_low$coefficients[2,1],
p_sp_low = sp_model_low$coefficients[2,4],
rsquared_sp_low = sp_model_low$r.squared,
slope_sp_high = sp_model_high$coefficients[2,1],
p_sp_high = sp_model_high$coefficients[2,4],
rsquared_sp_high = sp_model_high$r.squared,
# winter
slope_w_mean = NA,
p_w_mean = NA,
rsquared_w_mean = NA,
slope_w_low = NA,
p_w_low = NA,
rsquared_w_low = NA,
slope_w_high = NA,
p_w_high = NA,
rsquared_w_high = NA,
# summer
slope_su_mean = su_model_mean$coefficients[2,1],
p_su_mean = su_model_mean$coefficients[2,4],
rsquared_su_mean = su_model_mean$r.squared,
slope_su_low = su_model_low$coefficients[2,1],
p_su_low = su_model_low$coefficients[2,4],
rsquared_su_low = su_model_low$r.squared,
slope_su_high = su_model_high$coefficients[2,1],
p_su_high = su_model_high$coefficients[2,4],
rsquared_su_high = su_model_high$r.squared,
# fall
slope_f_mean = f_model_mean$coefficients[2,1],
p_f_mean = f_model_mean$coefficients[2,4],
rsquared_f_mean = f_model_mean$r.squared,
slope_f_low = f_model_low$coefficients[2,1],
p_f_low = f_model_low$coefficients[2,4],
rsquared_f_low = f_model_low$r.squared,
slope_f_high = f_model_high$coefficients[2,1],
p_f_high = f_model_high$coefficients[2,4],
rsquared_f_high = f_model_high$r.squared)}# end no winter output int
out_frame <- rbind(out_frame, loop_frame)
} # end if check on years and season
else{next}
} #end if check on site level data length
else{next}
}# end site loop
}# end site list length check
else{next}
}# end domain loop
View(out_frame)
out_path <- here('trends', paste0(target_solute,'.csv'))
out_path
source(analyze_tred.R)
source(analyze_trend.R)
source(analyze_trend)
source('analyze_trend.R')
source('analyze_trend.R')
analyze_trend(target_solute = 'SO4_S', ms_root = here('ms_data'))
analyze_trend(target_solute = 'pH', ms_root = here('ms_data'))
analyze_trend(target_solute = 'pH', ms_root = here('ms_data'))
source('analyze_trend.R')
analyze_trend(target_solute = 'pH', ms_root = here('ms_data'))
library(here)
analyze_trend(target_solute = 'DOC', ms_root = here('ms_data'))
analyze_trend(target_solute = 'SO4_S', ms_root = here('ms_data'))
# Suppress summarise info
options(dplyr.summarise.inform = FALSE)
library(here)
source('analyze_trend.R')
analyze_trend(target_solute = 'SO4_S', ms_root = here('ms_data'))
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(lubridate)
library(here)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(here)
library(tidyverse)
library(lubridate)
source('analyze_trend.R')
sulf <- read_csv(here('trends','SO4_S_trends.csv'))
data <- read_csv(here('trends','SO4_S_trends.csv')) %>%
rbind(.,read_csv(here('trends','DOC_trends.csv'))) %>%
rbind(.,read_csv(here('trends','pH_trends.csv')))
trends <- read_csv(here('trends','SO4_S_trends.csv')) %>%
rbind(.,read_csv(here('trends','DOC_trends.csv'))) %>%
rbind(.,read_csv(here('trends','pH_trends.csv')))
View(trends)
unique(trends$solute)
knitr::opts_chunk$set(echo = TRUE,
include = TRUE,
tidy.opts = list(width.cutoff = 60),
tidy = TRUE,
warning = F,
message = F)
library(here)
library(tidyverse)
library(lubridate)
source('analyze_trend.R')
site_data <- ms_load_sites()
View(site_data)
str(site_data)
str(trends)
trends %>%
left_join(., site_data, by = c('site' = 'site_code'))
library(mapview)
library(sf)
trends %>%
left_join(., site_data, by = c('site' = 'site_code')) %>%
st_as_sf(., coords = c(longitude, latitude))
trends %>%
left_join(., site_data, by = c('site' = 'site_code')) %>%
st_as_sf(., coords = c('longitude', 'latitude'))
sf_trends <- trends %>%
left_join(., site_data, by = c('site' = 'site_code')) %>%
st_as_sf(., coords = c('longitude', 'latitude'))
sf_trends <- trends %>%
left_join(., site_data, by = c('site' = 'site_code'))
View(sf_trends)
sf_trends <- trends %>%
left_join(., site_data, by = c('site' = 'site_code', 'domain'))
View(sf_trends)
site_data <- ms_load_sites()
trends %>%
left_join(., site_data, by = c('site' = 'site_code', 'domain'))
sf_trends <- trends %>%
left_join(., site_data, by = c('site' = 'site_code', 'domain'))
View(sf_trends)
sf_trends <- trends %>%
left_join(., site_data, by = c('site' = 'site_code', 'domain')) %>%
st_as_sf(., coords = c('longitude', 'latitude'), crs = 4326)
sf_trends <- trends %>%
left_join(., site_data, by = c('site' = 'site_code', 'domain')) %>%
filter(!is.na(longitude),
!is.na(latitude)) %>%
st_as_sf(., coords = c('longitude', 'latitude'), crs = 4326)
sf_trends <- trends %>%
left_join(., site_data, by = c('site' = 'site_code', 'domain')) %>%
filter(!is.na(longitude),
!is.na(latitude))
sf_trends <- trends %>%
left_join(., site_data, by = c('site' = 'site_code', 'domain')) %>%
filter(!is.na(longitude),
!is.na(latitude)) %>%
st_as_sf(., coords = c('longitude', 'latitude'), crs = 4326)
mapview(sf_trends)
str(sf_trends)
sf_trends %>%
select(domain, site, n_ann, geometry) %>%
mapview()
sf_trends %>%
select(domain, site, n_ann, geometry) %>%
mapview(.,
zcol = 'n_ann',
legend = T,
label = 'site')
sf_trends %>%
select(domain, site, n_ann, geometry) %>%
mapview(.,
zcol = 'n_ann',
legend = T,
label = 'domain_fullname')
sf_trends %>%
select(domain, site, n_ann, geometry) %>%
distinct() %>%
mapview(.,
zcol = 'n_ann',
legend = T,
label = 'domain_fullname')
sf_trends %>%
select(domain_fullname, site, n_ann, geometry) %>%
distinct() %>%
mapview(.,
zcol = 'n_ann',
legend = T,
label = 'domain_fullname')
sf_trends %>%
select(domain_fullname, site, n_ann, geometry) %>%
distinct()
sf_trends %>%
select(domain_fullname, site, n_ann, geometry) %>%
distinct() %>%
mapview(.,
zcol = 'n_ann',
legend = T,
label = 'domain_fullname')
sf_trends %>%
select(domain_fullname, site, n_ann, geometry) %>%
distinct() %>%
mapview(.,
zcol = 'n_ann',
legend = T,
label = 'domain_fullname',
layer.name = 'Years of data')
str(sf_trends)
trends <- read_csv(here('trends','SO4_S_trends.csv'), show_col_types = FALSE) %>%
rbind(.,read_csv(here('trends','DOC_trends.csv')), show_col_types = FALSE) %>%
rbind(.,read_csv(here('trends','pH_trends.csv')), show_col_types = FALSE)
trends <- read_csv(here('trends','SO4_S_trends.csv'), show_col_types = FALSE) %>%
rbind(.,read_csv(here('trends','DOC_trends.csv'), show_col_types = FALSE)) %>%
rbind(.,read_csv(here('trends','pH_trends.csv'), show_col_types = FALSE))
sf_trends %>%
filter(solute == 'SO4_S') %>%
select(domain_fullname, site, n_ann,
slope_ann_mean, p_ann_mean, rsquare_ann_mean, geometry) %>%
mapview(.,
zcol = 'n_ann',
legend = T,
label = 'domain_fullname',
layer.name = 'Years of data')
sf_trends %>%
filter(solute == 'SO4_S') %>%
select(domain_fullname, site, n_ann,
slope_ann_mean, p_ann_mean, rsquare_ann_mean, geometry) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend')
sf_trends %>%
filter(solute == 'SO4_S') %>%
select(domain_fullname, site, n_ann,
slope_ann_mean, p_ann_mean, rsquared_ann_mean, geometry) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend')
so4_ann <- sf_trends %>%
select(domain_fullname, site, n_ann,
slope_ann_mean, p_ann_mean, rsquared_ann_mean, geometry) %>%
filter(solute == 'SO4_S')
so4_ann <- sf_trends %>%
filter(solute == 'SO4_S') %>%
select(domain_fullname, site, n_ann,
slope_ann_mean, p_ann_mean, rsquared_ann_mean, geometry)
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend')
library(RColorBrewer)
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal(9, "RdYlGn"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal(9, "RdBu"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal("BuRd"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal(9, "BuRd"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal(9, "RdBu"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal("RdBu"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal(9, "RdBu"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal(9, "-RdBu"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal(9, "RdBu"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
vector.palette=brewer.pal(9, "RdBu"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions=brewer.pal(9, "RdBu"))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= pal(100),
at = seq(0.3, 0, -0.3))
pal = mapviewPalette("mapviewTopoColors")
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= pal(100),
at = seq(0.3, 0, -0.3))
scale_range <- c(1, -1)
pal <- colorNumeric("RdBu", domain = scale_range)
library(tigris)
install.packages(tigris)
install.packages('tigris')
library(tigris)
scale_range <- c(1, -1)
pal <- colorNumeric("RdBu", domain = scale_range)
library(leaflet)
library(sp)
scale_range <- c(1, -1)
pal <- colorNumeric("RdBu", domain = scale_range)
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= ~pal(new_states$dat))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= ~pal(slope_ann_mean))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= ~pal(so4_ann$slope_ann_mean))
reds = colorRampPalette(c('blue', 'dark red'))
colors = colorRampPalette(c('blue', 'dark red'))
so4_ann %>%
filter(p_ann_mean < 0.05) %>%
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= colors)
mapview(so4_ann,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= colors)
so4_ann_sig <- so4_ann %>%
filter(p_ann_mean < 0.05)
nrow(so4_ann_sig)/nrow(so4_ann)
print(paste('Ratio of signifcant to non-signficant trends is ', nrow(so4_ann_sig)/nrow(so4_ann))
print(paste('Ratio of signifcant to non-signficant trends is ', nrow(so4_ann_sig)/nrow(so4_ann)))
print(paste('Ratio of signifcant to non-signficant trends is ', signif(nrow(so4_ann_sig)/nrow(so4_ann)), digits = 2))
print(paste('Ratio of signifcant to non-signficant trends is ', signif(nrow(so4_ann_sig)/nrow(so4_ann), digits = 2)))
mapview(.,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= colors)
mapview(so4_ann_sig,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= colors)
ggplot(so4_ann)+
geom_density(x = slope_ann_mean)
ggplot(so4_ann)+
geom_density(aes(x = slope_ann_mean))
ggplot(so4_ann)+
geom_density(aes(x = slope_ann_mean)) +
labs(x = ) +
theme_few()
ggplot(so4_ann)+
geom_density(aes(x = slope_ann_mean)) +
labs(x = 'Slope of trendline') +
theme_few()
library(ggthemes)
ggplot(so4_ann)+
geom_density(aes(x = slope_ann_mean)) +
labs(x = 'Slope of trendline') +
theme_few()
ggplot(so4_ann)+
geom_hist(aes(x = slope_ann_mean)) +
labs(x = 'Slope of trendline') +
theme_few()
ggplot(so4_ann)+
geom_histogram(aes(x = slope_ann_mean)) +
labs(x = 'Slope of trendline') +
theme_few()
ggplot(so4_ann)+
geom_histogram(aes(x = slope_ann_mean)) +
labs(x = 'Slope of trendline',
caption = paste('n=',nrow(so4_ann))) +
theme_few()
ggplot(so4_ann_sig)+
geom_histogram(aes(x = slope_ann_mean)) +
labs(x = 'Slope of trendline',
caption = paste('n=',nrow(so4_ann_sig))) +
theme_few()
library(macrosheds)
knitr::opts_chunk$set(echo = TRUE,
include = TRUE,
tidy.opts = list(width.cutoff = 60),
tidy = TRUE,
warning = F,
message = F)
# needed packages
library(here)
library(tidyverse)
library(lubridate)
library(mapview)
library(sf)
library(tigris)
library(RColorBrewer)
library(leaflet)
library(sp)
library(ggthemes)
library(macrosheds)
# source model fitting function
source('analyze_trend.R')
# set color ramps
colors = colorRampPalette(c('blue', 'dark red'))
mapview(so4_ann,
zcol = 'slope_ann_mean',
legend = T,
label = 'domain_fullname',
layer.name = 'Trend',
col.regions= colors)
